(function ($) {
    $.fn.niceSelect = function (method) {
      function createNiceSelect(selectElement) {
        selectElement.after(
          $("<div></div>")
            .addClass("nice-select")
            .addClass(selectElement.attr("class") || "")
            .addClass(selectElement.attr("disabled") ? "disabled" : "")
            .attr("tabindex", selectElement.attr("disabled") ? null : "0")
            .html('<span class="current"></span><ul class="list"></ul>')
        );
  
        var niceSelect = selectElement.next();
        var options = selectElement.find("option");
        var selectedOption = selectElement.find("option:selected");
  
        niceSelect.find(".current").html(selectedOption.data("display") || selectedOption.text());
  
        options.each(function () {
          var option = $(this);
          var displayValue = option.data("display");
          niceSelect.find("ul").append(
            $("<li></li>")
              .attr("data-value", option.val())
              .attr("data-display", displayValue || null)
              .addClass("option" + (option.is(":selected") ? " selected" : "") + (option.is(":disabled") ? " disabled" : ""))
              .html(option.text())
          );
        });
      }
  
      if (typeof method === "string") {
        if (method === "update") {
          return this.each(function () {
            var selectElement = $(this);
            var niceSelect = selectElement.next(".nice-select");
            var isOpen = niceSelect.hasClass("open");
  
            if (niceSelect.length) {
              niceSelect.remove();
              createNiceSelect(selectElement);
  
              if (isOpen) {
                selectElement.next().trigger("click");
              }
            }
          });
        } else if (method === "destroy") {
          this.each(function () {
            var selectElement = $(this);
            var niceSelect = selectElement.next(".nice-select");
  
            if (niceSelect.length) {
              niceSelect.remove();
              selectElement.css("display", "");
            }
          });
  
          if ($(".nice-select").length === 0) {
            $(document).off(".nice_select");
          }
          return this;
        } else {
          console.log('Method "' + method + '" does not exist.');
          return this;
        }
      }
  
      this.hide();
  
      this.each(function () {
        var selectElement = $(this);
        if (!selectElement.next().hasClass("nice-select")) {
          createNiceSelect(selectElement);
        }
      });
  
      $(document).off(".nice_select");
  
      $(document).on("click.nice_select", ".nice-select", function (event) {
        var niceSelect = $(this);
        $(".nice-select").not(niceSelect).removeClass("open");
        niceSelect.toggleClass("open");
  
        if (niceSelect.hasClass("open")) {
          niceSelect.find(".option");
          niceSelect.find(".focus").removeClass("focus");
          niceSelect.find(".selected").addClass("focus");
        } else {
          niceSelect.focus();
        }
      });
  
      $(document).on("click.nice_select", function (event) {
        if ($(event.target).closest(".nice-select").length === 0) {
          $(".nice-select").removeClass("open").find(".option");
        }
      });
  
      $(document).on("click.nice_select", ".nice-select .option:not(.disabled)", function (event) {
        var option = $(this);
        var niceSelect = option.closest(".nice-select");
  
        niceSelect.find(".selected").removeClass("selected");
        option.addClass("selected");
  
        var displayText = option.data("display") || option.text();
        niceSelect.find(".current").text(displayText);
  
        niceSelect.prev("select").val(option.data("value")).trigger("change");
      });
  
      $(document).on("keydown.nice_select", ".nice-select", function (event) {
        var niceSelect = $(this);
        var focusedOption = $(niceSelect.find(".focus") || niceSelect.find(".list .option.selected"));
  
        if (event.keyCode === 32 || event.keyCode === 13) {
          if (niceSelect.hasClass("open")) {
            focusedOption.trigger("click");
          } else {
            niceSelect.trigger("click");
          }
          return false;
        }
  
        if (event.keyCode === 40) {
          if (niceSelect.hasClass("open")) {
            var nextOption = focusedOption.nextAll(".option:not(.disabled)").first();
            if (nextOption.length > 0) {
              niceSelect.find(".focus").removeClass("focus");
              nextOption.addClass("focus");
            }
          } else {
            niceSelect.trigger("click");
          }
          return false;
        }
  
        if (event.keyCode === 38) {
          if (niceSelect.hasClass("open")) {
            var prevOption = focusedOption.prevAll(".option:not(.disabled)").first();
            if (prevOption.length > 0) {
              niceSelect.find(".focus").removeClass("focus");
              prevOption.addClass("focus");
            }
          } else {
            niceSelect.trigger("click");
          }
          return false;
        }
  
        if (event.keyCode === 27) {
          if (niceSelect.hasClass("open")) {
            niceSelect.trigger("click");
          }
        } else if (event.keyCode === 9 && niceSelect.hasClass("open")) {
          return false;
        }
      });
  
      var testElement = document.createElement("a").style;
      testElement.cssText = "pointer-events:auto";
      if (testElement.pointerEvents !== "auto") {
        $("html").addClass("no-csspointerevents");
      }
  
      return this;
    };
  }(jQuery));
  